<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>419</string>
	<key>AMApplicationVersion</key>
	<string>2.6</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>(* This script produces a Sente CitationID wrapped in curly braces and attaches text selected in Sente as page numbers after the @ symbol. I.e. {CitationIDofSelectedReference@SelectedText}. It then tries to copy this string into a text editor of the user's choice. *)(* v3: completely rewrote the script*)-- the clipboard should be reset to its original content after the end of this scriptset theClipboardBefore to (the clipboard as text)-- activeEditorsList will be populated in the course of the script's executionset activeEditorsList to {}-- set a list of text editors whose running status is to be checkedset editorsList to {"Scrivener", "Microsoft Word", "TextEdit", "nvALT", "Sublime Text"}--    Generate variable with running appstell application "System Events"	set activeProcesses to (name of every process)end tell--    Generate list of running text editors    repeat with appName in editorsList	if appName is in activeProcesses then		set activeEditor to appName		set end of activeEditorsList to appName	end ifend repeat-- ask user to select from running text editors if there are more then one. Otherwiese continue with the sole running text editor or abort the scriptset editorCount to (count activeEditorsList)if editorCount = 1 then	set targetApp to (item 1 of activeEditorsList) as textelse if editorCount &gt; 0 then	set targetApp to (choose from list activeEditorsList with title "Running text editors" with prompt "Pick a text editor to send the reference's CitationID to" default items (item 1 of activeEditorsList) without multiple selections allowed) as textelse	-- Handle 0 items	display dialog "There are no running text editors" buttons {"OK"}	set targetApp to "false"end if-- this combines the Citation ID of the selected reference with the selected text into the required stringtell application "Sente 6"	activate	set theRef to (retrieve selected references current library as tags)	set output to "{" &amp; theRef &amp; "}"		set the clipboard to output as textend tell-- this calls the pbpaste shell script to strip out any formatting, unfortunately this also removes all unicode characters-- do shell script "pbpaste -Prefer txt | pbcopy"-- paste the CitationID and page number into the selected text editorif targetApp is not "false" then	tell application targetApp		activate		delay 0.8		tell application "System Events"			keystroke "v" using command down		end tell	end tellend if-- reset the clipboard to its original content, unfortunately, this action is done before the end of the script-- set the clipboard to theClipboardBefore as text</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>27947C77-EB32-4AA9-A1F1-A2162203830E</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>E7935E78-D442-4D28-BD7D-90D2F980A83B</string>
				<key>UUID</key>
				<string>452789F2-4EE5-46B2-888C-89C855ADE9C4</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>398.000000:831.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.thirdstreetsoftware.sente6</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Office-Research/Reference Manager/Sente 6.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
